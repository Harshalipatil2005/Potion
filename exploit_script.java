import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.util.HashMap;
import java.util.Map;

public class PotionMaking {
    public static void main(String[] args) {
        HttpClient httpClient = HttpClient.newHttpClient();

        for (int i = 0; i < 25; i++) {
            String potionName = "potion" + i;
            Map<String, String> data = new HashMap<>();
            data.put("potionName", potionName);

            String url = "https://github.com/Harshalipatil2005/potionmaking/blob/main/main.py";
            HttpRequest request = HttpRequest.newBuilder()
                    .uri(URI.create(url))
                    .header("Content-Type", "application/x-www-form-urlencoded")
                    .POST(buildFormDataFromMap(data))
                    .build();

            try {
                HttpResponse<String> response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());

                if (response.statusCode() == 200 && response.body().contains("VishwaCTF")) {
                    System.out.println(response.body());
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    private static HttpRequest.BodyPublisher buildFormDataFromMap(Map<String, String> data) {
        StringBuilder builder = new StringBuilder();
        for (Map.Entry<String, String> entry : data.entrySet()) {
            if (builder.length() > 0) {
                builder.append("&");
            }
            builder.append(URLEncoder.encode(entry.getKey(), StandardCharsets.UTF_8));
            builder.append("=");
            builder.append(URLEncoder.encode(entry.getValue(), StandardCharsets.UTF_8));
        }
        return HttpRequest.BodyPublishers.ofString(builder.toString());
    }
}
